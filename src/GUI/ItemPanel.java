/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.DBUtil;
import DAO.FileDAO;
import DTO.Item;

import DTO.Supplier;
import Validation.Check;
import java.sql.SQLException;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JSpinner.DefaultEditor;
import javax.swing.SpinnerDateModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Asus
 */
public class ItemPanel extends javax.swing.JPanel {

    /**
     * Creates new form SupplierPanel
     */
    int pos = -1;
    Vector<Supplier> listSupplier;
    Vector<Item> listItems;
    String tableName = "item";
    MainFrame mainFrame;
    int saveNew = -1;
    boolean saveCheck = false;
    public Locale locale;
    ResourceBundle rs;
    public ItemPanel(MainFrame mainFrame) {
        initComponents();
        this.locale=mainFrame.locale;
        this.rs=ResourceBundle.getBundle("Language.Language",locale);
        this.mainFrame=mainFrame;
        loadItem();
        loadLanguage();
    }
    
    public void loadItem() {
        listSupplier = DBUtil.loadSuppliers();
        listItems = DBUtil.loadItems();

        // load Table
        Vector<String> header = DBUtil.loadColumnLable(tableName);
        header.add("Supplier Name");
        Vector data = new Vector();
        if (listItems != null) {
            for (Item item : listItems) {
                Vector row = new Vector();
                row.add(item.getId());
                row.add(item.getName());
                row.add(item.getPrice());
                row.add(item.getSupplierId());
                if (item.getSupplierId() == -1) {
                    row.add(rs.getString("updatestatus"));
                } else {
                    row.add(getSupplier(item.getSupplierId()));
                }

                data.add(row);

            }

        }
        DefaultTableModel model = (DefaultTableModel) tblItem.getModel();

        model.setDataVector(data, header);

        // load comboBox
        cbxSuppliers.removeAllItems();
        DefaultComboBoxModel modelComboBox = (DefaultComboBoxModel) cbxSuppliers.getModel();
        for (Supplier sup : listSupplier) {

            modelComboBox.addElement(sup.getName());
        }
        cbxSuppliers.setModel(modelComboBox);

        //spnPrice.getEditor().setEnabled(false);
        ((DefaultEditor) spnPrice.getEditor()).getTextField().setEditable(false);
    }
    private void loadLanguage(){
        
       
        lblMaSP.setText(rs.getString("ProductID"));
        lblTenSP.setText(rs.getString("ProductName"));
        lblGia.setText(rs.getString("Price"));
        lblNCC.setText(rs.getString("Provide"));
        btnAdd.setText(rs.getString("addbutton"));
        btnCancelTrans.setText(rs.getString("cancelbutton"));
        btnRemove.setText(rs.getString("removebutton"));
        btnEdit.setText(rs.getString("editbutton"));
        btnSave.setText(rs.getString("savebutton"));
        btnReport.setText(rs.getString("reportbutton"));
        
               
    }
    private String getSupplier(int id) {
        for (Supplier sup : listSupplier) {
            if (sup.getId() == id) {
                return sup.getName();
            }
        }
        return "";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblItem = new javax.swing.JTable();
        lblMaSP = new javax.swing.JLabel();
        lblTenSP = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnCancelTrans = new javax.swing.JButton();
        btnReport = new javax.swing.JButton();
        spnPrice = new javax.swing.JSpinner();
        lblGia = new javax.swing.JLabel();
        lblNCC = new javax.swing.JLabel();
        cbxSuppliers = new javax.swing.JComboBox<>();

        tblItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblItem.getTableHeader().setReorderingAllowed(false);
        tblItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblItemMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblItem);

        lblMaSP.setText("Ma SP");

        lblTenSP.setText("Ten SP");

        txtID.setEnabled(false);

        txtName.setEnabled(false);

        btnAdd.setText("Them");
        btnAdd.setName("add"); // NOI18N
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setText("Sua");
        btnEdit.setName("edit"); // NOI18N
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnSave.setText("Luu");
        btnSave.setName("save"); // NOI18N
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnRemove.setText("Xoa");
        btnRemove.setName("remove"); // NOI18N
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnCancelTrans.setText("Huy thao Tac");
        btnCancelTrans.setName("cancel"); // NOI18N
        btnCancelTrans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelTransActionPerformed(evt);
            }
        });

        btnReport.setText("Xuat Bao Cao");
        btnReport.setToolTipText("");
        btnReport.setName("report"); // NOI18N
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });

        spnPrice.setModel(new javax.swing.SpinnerNumberModel(1000, 1000, 1000000, 500));
        spnPrice.setEnabled(false);

        lblGia.setText("Gia");

        lblNCC.setText("Nha CC");

        cbxSuppliers.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbxSuppliers.setEnabled(false);
        cbxSuppliers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxSuppliersActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(btnRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCancelTrans))
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnReport)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMaSP)
                            .addComponent(lblTenSP)
                            .addComponent(lblGia)
                            .addComponent(lblNCC))
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtID)
                            .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(spnPrice)
                                .addGap(79, 79, 79))
                            .addComponent(cbxSuppliers, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaSP)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTenSP)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGia)
                            .addComponent(spnPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbxSuppliers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNCC))
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnEdit)
                            .addComponent(btnSave))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRemove)
                            .addComponent(btnCancelTrans)
                            .addComponent(btnReport))))
                .addContainerGap(44, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblItemMouseClicked
        // TODO add your handling code here:
        if (tblItem.getSelectedRowCount() > 1) {
            tblItem.clearSelection();
        }
        pos = tblItem.getSelectedRow();
        if (pos >= 0) {
            txtID.setText("" + tblItem.getValueAt(pos, 0));
            txtName.setText("" + tblItem.getValueAt(pos, 1));
            spnPrice.setValue(tblItem.getValueAt(pos, 2));
            cbxSuppliers.setSelectedItem(tblItem.getValueAt(pos, 3));
           
        }

    }//GEN-LAST:event_tblItemMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if (saveNew != -1) {
            changeState(evt);
        } else {
            tblItem.setEnabled(false);
            saveNew = 1;
            clear();
            setEnable(true);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        int flag = 1;
        if (saveNew != -1) {
            flag = 0;
            changeState(evt);
        }
        checkEdit(flag);
    }//GEN-LAST:event_btnEditActionPerformed
    private void checkEdit(int flag) {
        if (flag == 1) {
            if (tblItem.getSelectedRowCount() == 1) {
                tblItem.setEnabled(true);
                saveNew = 0;
                setEnable(false);
            } else if (tblItem.getSelectedRowCount() > 1 || tblItem.getSelectedRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Hay chon 1 hang de sua");
                saveNew = -1;
                tblItem.setEnabled(true);
                clear();
                setEnable(false);
            }
        }
    }

    private boolean checkValidate() {
        StringBuilder message = new StringBuilder();
        int flag=1;
        if (!Check.checkStringInput(txtName.getText())) {
            message.append("ten bi trong");
            flag=0;
        }
            
        if(cbxSuppliers.getSelectedIndex()<0){
               message.append("Chua co thong tin cua nha cung cap");
               flag=0;
            }
        if(flag==0){
            JOptionPane.showMessageDialog(this, message.toString());
            return false;
        }
            
        return true;
    }
    private boolean checkSupplying(){
        for (Supplier sup : listSupplier) {
            if(sup.getName().equals((cbxSuppliers).getSelectedItem())){
                if(sup.getSupplying()==0){
                    JOptionPane.showMessageDialog(this,"Nha cung cap khong con cung cap hang");
                    return false;
                }
            }
        }
        return true;
    }
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        saveItem();
       
    }//GEN-LAST:event_btnSaveActionPerformed
    public void saveItem(){
         if (checkValidate()&&checkSupplying()) {
            tblItem.setEnabled(true);
            String sql = "";
            String id = txtID.getText().trim();
            String name = txtName.getText().trim();
            int supplierId = listSupplier.get(cbxSuppliers.getSelectedIndex()).getId();
            
            int price = (Integer) spnPrice.getValue();

            if (saveNew == 1) {
                saveNew = -1;
                sql = "insert into Item values( " + id + ", '" + name + "' " + "," + price + "," + supplierId + " )";
                try {
                    int result = DBUtil.doRecord(tableName, sql);
                    if (result != 0) {
                        JOptionPane.showMessageDialog(null, "Da luu");
                        loadItem();
                    }
                } catch (SQLException ex) {
                    if (ex.getMessage().contains("duplicate")) {
                        JOptionPane.showMessageDialog(null, "Ma san pham bi trung");
                    } else {
                        JOptionPane.showMessageDialog(null, "Nhap thong tin sai");
                    }
                }
            } else if (saveNew == 0) {
                saveNew = -1;
                sql = "update Item set name =" + " '" + name + "' " + ",price = " + price + ",supplierid = " + supplierId + "where id = " + id;
                try {
                    int result = DBUtil.doRecord(tableName, sql);
                    if (result != 0) {
                        JOptionPane.showMessageDialog(null, "Da luu");
                        loadItem();
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Nhap thong tin sai");

                }
            }
            cancel();
        }

    }
    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        if (saveNew == 1 || saveNew == 0) {
            changeState(evt);
        } else {
            saveNew = -1;
            pos = tblItem.getSelectedRow();
            if(pos<0){
                JOptionPane.showMessageDialog(null, "Hay chon san pham de xoa");
            }
            else{
                String id = "" + tblItem.getValueAt(pos, 0);
            String sql = "Delete from Item where id = " + id;
            try {
                int result = DBUtil.doRecord(tableName, sql);
                if (result != 0) {
                    JOptionPane.showMessageDialog(null, "Da xoa");
                    clear();

                    setEnable(false);
                    loadItem();
                } else {
                    JOptionPane.showMessageDialog(null, "xoa loi");
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Xoa loi");
            }
            }
                   
            
        }

    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnCancelTransActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelTransActionPerformed
        // TODO add your handling code here:
        changeState(evt);
    }//GEN-LAST:event_btnCancelTransActionPerformed

    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        // TODO add your handling code here:
        Vector<Item> list = DBUtil.loadItems();
        try {
            FileDAO.writeFile(list);
            JOptionPane.showMessageDialog(null, "da xuat bao cao");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "xuat bao cao bi loi, kiem tra file");
        }
    }//GEN-LAST:event_btnReportActionPerformed

    private void cbxSuppliersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxSuppliersActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cbxSuppliersActionPerformed
    private void changeState(java.awt.event.ActionEvent evt) {
        if (saveNew == 1 || saveNew == 0) {
            int answer = JOptionPane.showConfirmDialog(this, "Ban co muon huy thao tac khong ?", "warning", JOptionPane.YES_NO_OPTION);
            switch (answer) {
                case JOptionPane.OK_OPTION: {
                    if (((JButton) evt.getSource()).getName().equals("cancel")) {
                        tblItem.setEnabled(true);
                        cancel();
                    } else if (((JButton) evt.getSource()).getName().equals("add")) {
                        saveNew = 1;
                        clear();
                        tblItem.setEnabled(false);
                        setEnable(true);
                    } else if (((JButton) evt.getSource()).getName().equals("edit")) {
                        checkEdit(1);
                    } else if (((JButton) evt.getSource()).getName().equals("remove")) {
                        saveNew = -1;
                        tblItem.setEnabled(true);
                        setEnable(false);
                    }
                    break;
                }
                case JOptionPane.NO_OPTION: {

                    break;
                }
            }
        } else {
            cancel();
        }
    }

    private void cancel() {
        saveNew = -1;
        setEnable(false);
        clear();
        tblItem.clearSelection();
    }

    private void setEnable(boolean enable) {
        txtID.setEnabled(enable);
        txtName.setEnabled(enable);
        spnPrice.setEnabled(enable);
        cbxSuppliers.setEnabled(enable);
        if (saveNew == 0) {
            txtName.setEnabled(true);
            spnPrice.setEnabled(true);
            cbxSuppliers.setEnabled(true);
        }
    }

    private void clear() {
        tblItem.clearSelection();
        txtID.setText("");
        txtName.setText("");
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancelTrans;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnReport;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<String> cbxSuppliers;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblGia;
    private javax.swing.JLabel lblMaSP;
    private javax.swing.JLabel lblNCC;
    private javax.swing.JLabel lblTenSP;
    private javax.swing.JSpinner spnPrice;
    private javax.swing.JTable tblItem;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
