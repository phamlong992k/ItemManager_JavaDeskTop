/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.DBUtil;
import DAO.FileDAO;

import DTO.Supplier;
import Service.SupplierService;
import Validation.Check;
import java.io.File;
import java.sql.SQLException;
import java.util.Locale;
import java.util.ResourceBundle;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Asus
 */
public class SupplierPanel extends javax.swing.JPanel {

    /**
     * Creates new form SupplierPanel
     */
    private String tableName = "supplier";
    private int pos = -1;
    private int saveNew = -1;
    private boolean saveCheck = false;
    private MainFrame mainFrame;
    private Vector<Supplier> list;
    private Locale locale;
    ResourceBundle rs;
    public SupplierPanel(MainFrame mainFrame) {
        initComponents();
        this.mainFrame = mainFrame;
        this.mainFrame.setLocation();
        locale=mainFrame.locale;
        rs=ResourceBundle.getBundle("Language.Language",locale);
        
        loadSupplier();
        loadLanguage();

    }

    public Vector<Supplier> getList() {
        return list;
    }
    private void loadLanguage(){
        
        lblMaNCC.setText(rs.getString("ProvideID"));
        lblTenNCC.setText(rs.getString("ProvideName"));
        btnAdd.setText(rs.getString("addbutton"));
        btnCancelTrans.setText(rs.getString("cancelbutton"));
        btnRemove.setText(rs.getString("removebutton"));
        btnEdit.setText(rs.getString("editbutton"));
        btnSave.setText(rs.getString("savebutton"));
        btnReport.setText(rs.getString("reportbutton"));
        cbxSupplying.setText(rs.getString("supplying"));
               
    }
    private void loadSupplier() {
        Vector<String> header = DBUtil.loadColumnLable("supplier");
        // lay record dang chua trong bang supplier
         list= DBUtil.loadSuppliers();
        //
        Vector data = new Vector();
        if (list != null) {
            for (Supplier supplier : list) {
                Vector row = new Vector();
                row.add(supplier.getId());
                row.add(supplier.getName());

                data.add(row);
            }
        }
        DefaultTableModel model = (DefaultTableModel) tblSupplier.getModel();
        model.setDataVector(data, header);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblSupplier = new javax.swing.JTable();
        lblMaNCC = new javax.swing.JLabel();
        lblTenNCC = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        btnCancelTrans = new javax.swing.JButton();
        btnReport = new javax.swing.JButton();
        cbxSupplying = new javax.swing.JCheckBox();

        tblSupplier.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSupplier.getTableHeader().setReorderingAllowed(false);
        tblSupplier.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSupplierMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSupplier);

        lblMaNCC.setText("Ma NCC");

        lblTenNCC.setText("Ten NCC");

        txtID.setEnabled(false);
        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        txtName.setEnabled(false);

        btnAdd.setText("Them");
        btnAdd.setName("add"); // NOI18N
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setText("Sua");
        btnEdit.setName("edit"); // NOI18N
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnSave.setText("Luu");
        btnSave.setName("save"); // NOI18N
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnRemove.setText("Xoa");
        btnRemove.setName("remove"); // NOI18N
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        btnCancelTrans.setText("Huy thao Tac");
        btnCancelTrans.setName("cancel"); // NOI18N
        btnCancelTrans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelTransActionPerformed(evt);
            }
        });

        btnReport.setText("Xuat Bao Cao");
        btnReport.setToolTipText("");
        btnReport.setName("report"); // NOI18N
        btnReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportActionPerformed(evt);
            }
        });

        cbxSupplying.setText("Dang cung cap");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRemove, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdd))
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCancelTrans, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnReport)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMaNCC)
                            .addComponent(lblTenNCC))
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxSupplying)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtID)
                                .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)))))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMaNCC)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTenNCC)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addComponent(cbxSupplying)
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnEdit)
                            .addComponent(btnSave))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRemove)
                            .addComponent(btnCancelTrans)
                            .addComponent(btnReport))))
                .addContainerGap(44, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if (saveNew != -1) {
            changeState(evt);
        } else {
            tblSupplier.setEnabled(false);
            saveNew = 1;
            clear();
            setEnable(true);
        }
    }//GEN-LAST:event_btnAddActionPerformed
    private boolean checkValidate() {
        StringBuilder message = new StringBuilder();
        if (!Check.checkStringInput(txtName.getText())) {
            message.append("ten bi trong");
            JOptionPane.showMessageDialog(this, message.toString());
            return false;
        }
        return true;
    }
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:

        int flag = 1;
        if (saveNew != -1) {
            flag = 0;
            changeState(evt);
        }
        checkEdit(flag);

    }//GEN-LAST:event_btnEditActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        saveSupplier();

    }//GEN-LAST:event_btnSaveActionPerformed
    public void saveSupplier(){
        if (checkValidate()) {
            tblSupplier.setEnabled(true);
            String sql = "";
            String id = txtID.getText().trim();
            String name = txtName.getText().trim();
            int supplying;
            if(cbxSupplying.isSelected()){
                supplying=1;
            }
            else{
                supplying=0;
            }
            if (saveNew == 1) {
                saveNew = -1;
//                sql = "insert into supplier values( " + id + ", '" + name + "'" +","+supplying+")";
//                try {
//                    int result = DBUtil.doRecord(tableName, sql);
//                    if (result != 0) {
//                        JOptionPane.showMessageDialog(null, "Da luu");
//                        loadSupplier();
//                        mainFrame.iP.loadItem();
//                    }
//                } catch (SQLException ex) {
//                    if (ex.getMessage().contains("duplicate")) {
//                        JOptionPane.showMessageDialog(null, "Ma nha cung cap bi trung");
//                    } else {
//                        JOptionPane.showMessageDialog(null, "Nhap thong tin sai");
//                    }
//                }
                //
                SupplierService supService= new SupplierService();
                supService.insertSupplier(new Supplier(Integer.parseInt(id),name, supplying));
                loadSupplier();
                mainFrame.iP.loadItem();
            } else if (saveNew == 0) {
                saveNew = -1;
                sql = "update supplier set name =" + " '" + name + "' "+", supplying = "+supplying + " where id = " + id;
                try {
                    int result = DBUtil.doRecord(tableName, sql);
                    if (result != 0) {
                        JOptionPane.showMessageDialog(null, "Da luu");
                        loadSupplier();
                        mainFrame.iP.loadItem();
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Nhap thong tin sai");

                }
            }
            cancel();
        }
    }
    private void tblSupplierMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSupplierMouseClicked
        // TODO add your handling code here:
        if (tblSupplier.getSelectedRowCount() > 1) {
            tblSupplier.clearSelection();
        }
        pos = tblSupplier.getSelectedRow();
        if (pos >= 0) {
            txtID.setText("" + tblSupplier.getValueAt(pos, 0));
            txtName.setText("" + tblSupplier.getValueAt(pos, 1));
            if(list.get(pos).getSupplying()==1){
                cbxSupplying.setSelected(true);
            }
            else{
                cbxSupplying.setSelected(false);
            }
        }
    }//GEN-LAST:event_tblSupplierMouseClicked

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // TODO add your handling code here:
        if (saveNew == 1 || saveNew == 0) {
            changeState(evt);
        } else {
            saveNew = -1;
            pos = tblSupplier.getSelectedRow();
            if(pos<0){
                 JOptionPane.showMessageDialog(null, "Hay chon nha cung cap de xoa");
            }
            else{
                String id = "" + tblSupplier.getValueAt(pos, 0);
            String sql = "Delete from supplier where id = " + id;
            String sqlUpdate = "Update item set supplierid = null where supplierid = " + id;
            try {
                int resultUpdate = DBUtil.doRecord("Item", sqlUpdate);
                int result = DBUtil.doRecord(tableName, sql);
                if (result != 0) {
                    JOptionPane.showMessageDialog(null, "Da xoa");
                    clear();
                    setEnable(false);
                    loadSupplier();
                    mainFrame.iP.loadItem();
                    
                } else {
                    JOptionPane.showMessageDialog(null, "xoa loi");
                }

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Xoa loi");
            }
            }
            

        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnCancelTransActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelTransActionPerformed
        // TODO add your handling code here:
        changeState(evt);

    }//GEN-LAST:event_btnCancelTransActionPerformed
    private void changeState(java.awt.event.ActionEvent evt) {
        if (saveNew == 1 || saveNew == 0) {
            int answer = JOptionPane.showConfirmDialog(this, "Ban co muon huy thao tac khong ?", "warning", JOptionPane.YES_NO_OPTION);
            switch (answer) {
                case JOptionPane.OK_OPTION: {
                    if (((JButton) evt.getSource()).getName().equals("cancel")) {
                        tblSupplier.setEnabled(true);
                        cancel();
                    } else if (((JButton) evt.getSource()).getName().equals("add")) {
                        saveNew = 1;
                        clear();
                        tblSupplier.setEnabled(false);
                        setEnable(true);
                    } else if (((JButton) evt.getSource()).getName().equals("edit")) {
//                        saveNew = 0;
//                        tblSupplier.setEnabled(true);
//                        setEnable(false);
                            checkEdit(1);
                    } else if (((JButton) evt.getSource()).getName().equals("remove")) {
                        saveNew = -1;
                        tblSupplier.setEnabled(true);
                        setEnable(false);
                    }
                    break;
                }
                case JOptionPane.NO_OPTION: {

                    break;
                }
            }
        } else {
            cancel();
        }
    }
     private void checkEdit(int flag) {
        if (flag == 1) {
            if (tblSupplier.getSelectedRowCount() == 1) {
                tblSupplier.setEnabled(true);
                saveNew = 0;
                setEnable(false);
            } else if (tblSupplier.getSelectedRowCount() > 1 || tblSupplier.getSelectedRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "Hay chon 1 hang de sua");
                saveNew = -1;
                tblSupplier.setEnabled(true);
                clear();
                setEnable(false);
            }
        }
    }
    private void btnReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportActionPerformed
        // TODO add your handling code here:
        Vector<Supplier> list = DBUtil.loadSuppliers();
        try {
            FileDAO.writeFile(list);
        } catch (Exception ex) {
            Logger.getLogger(SupplierPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnReportActionPerformed

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed
    private void cancel() {
        saveNew = -1;
        setEnable(false);
        clear();
        tblSupplier.clearSelection();
    }

    private void setEnable(boolean enable) {
        txtID.setEnabled(enable);
        txtName.setEnabled(enable);
        if (saveNew == 0) {
            txtName.setEnabled(true);
        }
    }

    private void clear() {
        tblSupplier.clearSelection();
        txtID.setText("");
        txtName.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancelTrans;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnReport;
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox cbxSupplying;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMaNCC;
    private javax.swing.JLabel lblTenNCC;
    private javax.swing.JTable tblSupplier;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
